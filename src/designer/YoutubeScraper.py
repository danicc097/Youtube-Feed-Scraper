# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'YoutubeScraper.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(978, 758)
        font = QtGui.QFont()
        font.setFamily("Arial")
        MainWindow.setFont(font)
        MainWindow.setStyleSheet("")
        MainWindow.setIconSize(QtCore.QSize(40, 40))
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        MainWindow.setDockNestingEnabled(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.listWidgetVideos = QtWidgets.QListWidget(self.centralwidget)
        self.listWidgetVideos.setTabKeyNavigation(False)
        self.listWidgetVideos.setObjectName("listWidgetVideos")
        self.gridLayout.addWidget(self.listWidgetVideos, 3, 0, 1, 2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.actionREW = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.actionREW.sizePolicy().hasHeightForWidth())
        self.actionREW.setSizePolicy(sizePolicy)
        self.actionREW.setMinimumSize(QtCore.QSize(0, 40))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.actionREW.setFont(font)
        self.actionREW.setStyleSheet("border:0px")
        self.actionREW.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../data/playback_rew.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionREW.setIcon(icon)
        self.actionREW.setIconSize(QtCore.QSize(32, 32))
        self.actionREW.setCheckable(True)
        self.actionREW.setAutoDefault(True)
        self.actionREW.setDefault(True)
        self.actionREW.setFlat(True)
        self.actionREW.setObjectName("actionREW")
        self.horizontalLayout.addWidget(self.actionREW)
        self.actionPLAY = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.actionPLAY.sizePolicy().hasHeightForWidth())
        self.actionPLAY.setSizePolicy(sizePolicy)
        self.actionPLAY.setMinimumSize(QtCore.QSize(0, 40))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.actionPLAY.setFont(font)
        self.actionPLAY.setStyleSheet("border:0px")
        self.actionPLAY.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../../data/playback_play.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon1.addPixmap(QtGui.QPixmap("../../data/playback_play_icon&48.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        icon1.addPixmap(QtGui.QPixmap("../../data/playback_play_icon&48.png"), QtGui.QIcon.Active, QtGui.QIcon.Off)
        icon1.addPixmap(QtGui.QPixmap("../../data/playback_pause.png"), QtGui.QIcon.Active, QtGui.QIcon.On)
        icon1.addPixmap(QtGui.QPixmap("../../data/playback_play - Copy.png"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        self.actionPLAY.setIcon(icon1)
        self.actionPLAY.setIconSize(QtCore.QSize(48, 48))
        self.actionPLAY.setCheckable(True)
        self.actionPLAY.setAutoDefault(False)
        self.actionPLAY.setDefault(False)
        self.actionPLAY.setFlat(True)
        self.actionPLAY.setObjectName("actionPLAY")
        self.horizontalLayout.addWidget(self.actionPLAY)
        self.actionFF = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.actionFF.sizePolicy().hasHeightForWidth())
        self.actionFF.setSizePolicy(sizePolicy)
        self.actionFF.setMinimumSize(QtCore.QSize(0, 40))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.actionFF.setFont(font)
        self.actionFF.setStyleSheet("border:0px")
        self.actionFF.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("../../data/playback_ff.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFF.setIcon(icon2)
        self.actionFF.setIconSize(QtCore.QSize(32, 32))
        self.actionFF.setCheckable(True)
        self.actionFF.setAutoDefault(True)
        self.actionFF.setDefault(True)
        self.actionFF.setFlat(True)
        self.actionFF.setObjectName("actionFF")
        self.horizontalLayout.addWidget(self.actionFF)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.gridLayout.addLayout(self.horizontalLayout, 0, 0, 2, 2)
        self.horizontalSlider = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider.setStyleSheet(".QSlider {\n"
"    min-height: 33px;\n"
"    max-height: 33px;\n"
"    border-radius: 10px;\n"
"}\n"
"\n"
".QSlider::groove:horizontal {\n"
"    border: 4px solid #262626;\n"
"    height: 1px;\n"
"    background: #393939;\n"
"    margin: 0 12px;\n"
"}\n"
"\n"
".QSlider::handle:horizontal {\n"
"    background: #3472d6;\n"
"    border: 5px solid #3472d6;\n"
"    border-radius: 5px;\n"
"    width: 3px;\n"
"    height: 100px;\n"
"    margin: -24px -12px;\n"
"}")
        self.horizontalSlider.setSingleStep(10)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setTickPosition(QtWidgets.QSlider.TicksBothSides)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.gridLayout.addWidget(self.horizontalSlider, 2, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 978, 20))
        font = QtGui.QFont()
        font.setFamily("Fira Sans Medium")
        self.menubar.setFont(font)
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.toolBar.setIconSize(QtCore.QSize(20, 20))
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionNew_Window = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("D:/OneDrive/RailwaySim/Qt/images/png/doc_new_icon&48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew_Window.setIcon(icon3)
        font = QtGui.QFont()
        font.setFamily("Fira Sans Medium")
        self.actionNew_Window.setFont(font)
        self.actionNew_Window.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.actionNew_Window.setObjectName("actionNew_Window")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("D:/OneDrive/RailwaySim/Qt/images/png/folder_open_icon&48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen.setIcon(icon4)
        font = QtGui.QFont()
        font.setFamily("Fira Sans Medium")
        self.actionOpen.setFont(font)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("D:/OneDrive/RailwaySim/Qt/images/png/save_icon&48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon5)
        font = QtGui.QFont()
        font.setFamily("Fira Sans Medium")
        self.actionSave.setFont(font)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_as = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Fira Sans Medium")
        self.actionSave_as.setFont(font)
        self.actionSave_as.setObjectName("actionSave_as")
        self.actionGitHub_Homepage = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("D:/OneDrive/RailwaySim/Qt/images/github icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionGitHub_Homepage.setIcon(icon6)
        font = QtGui.QFont()
        font.setFamily("Fira Sans Medium")
        self.actionGitHub_Homepage.setFont(font)
        self.actionGitHub_Homepage.setObjectName("actionGitHub_Homepage")
        self.actionEdit = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Fira Sans Medium")
        self.actionEdit.setFont(font)
        self.actionEdit.setShortcut("")
        self.actionEdit.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionEdit.setObjectName("actionEdit")
        self.actionExit = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Fira Sans Medium")
        self.actionExit.setFont(font)
        self.actionExit.setObjectName("actionExit")
        self.actionGetFeed = QtWidgets.QAction(MainWindow)
        self.actionGetFeed.setObjectName("actionGetFeed")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Fira Sans Medium")
        self.actionAbout.setFont(font)
        self.actionAbout.setObjectName("actionAbout")
        self.actionopenCSV = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("D:/OneDrive/RailwaySim/icons to export/pencil_icon&48.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionopenCSV.setIcon(icon7)
        self.actionopenCSV.setObjectName("actionopenCSV")
        self.actionSaveResults = QtWidgets.QAction(MainWindow)
        self.actionSaveResults.setObjectName("actionSaveResults")
        self.actionOpenResults = QtWidgets.QAction(MainWindow)
        self.actionOpenResults.setObjectName("actionOpenResults")
        self.actionAddToReport = QtWidgets.QAction(MainWindow)
        self.actionAddToReport.setObjectName("actionAddToReport")
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_as)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionEdit)
        self.menuHelp.addAction(self.actionGitHub_Homepage)
        self.menuHelp.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionGetFeed)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionSaveResults)
        self.toolBar.addAction(self.actionOpenResults)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "YouTube Scraper"))
        self.menuFile.setTitle(_translate("MainWindow", "&File"))
        self.menuEdit.setTitle(_translate("MainWindow", "&Edit"))
        self.menuHelp.setTitle(_translate("MainWindow", "&Help"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar_2"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionNew_Window.setText(_translate("MainWindow", "New Window"))
        self.actionNew_Window.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionOpen.setText(_translate("MainWindow", "Open..."))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSave_as.setText(_translate("MainWindow", "Save as..."))
        self.actionSave_as.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionGitHub_Homepage.setText(_translate("MainWindow", "GitHub Homepage"))
        self.actionEdit.setText(_translate("MainWindow", "Preferences"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionGetFeed.setText(_translate("MainWindow", "Scrape YouTube feed"))
        self.actionGetFeed.setToolTip(_translate("MainWindow", "Scrape YouTube feed"))
        self.actionGetFeed.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionopenCSV.setText(_translate("MainWindow", "openCSV"))
        self.actionSaveResults.setText(_translate("MainWindow", "Save results"))
        self.actionSaveResults.setToolTip(_translate("MainWindow", "Save results to CSV"))
        self.actionSaveResults.setShortcut(_translate("MainWindow", "Ctrl+Shift+D"))
        self.actionOpenResults.setText(_translate("MainWindow", "Open results"))
        self.actionOpenResults.setToolTip(_translate("MainWindow", "Open results from CSV"))
        self.actionOpenResults.setShortcut(_translate("MainWindow", "Ctrl+Shift+O"))
        self.actionAddToReport.setText(_translate("MainWindow", "AddToReport"))
        self.actionAddToReport.setToolTip(_translate("MainWindow", "Add current chart to report file"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
